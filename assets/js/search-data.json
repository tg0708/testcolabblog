{
  
    
        "post0": {
            "title": "마크다운 테스트",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://tg0708.github.io/testcolabblog/deep%20learning/markdown/2022/07/04/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4_%ED%85%8C%EC%8A%A4%ED%8A%B8.html",
            "relUrl": "/deep%20learning/markdown/2022/07/04/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4_%ED%85%8C%EC%8A%A4%ED%8A%B8.html",
            "date": " • Jul 4, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "제목!!",
            "content": "from tqdm import tqdm from bs4 import BeautifulSoup import requests import re import pandas as pd col = [&#39;날짜&#39;, &#39;카테고리&#39;, &#39;홈사&#39;,&#39;시간&#39;,&#39;타이틀&#39;,&#39;제품가&#39;,&#39;이미지&#39;] df = pd.DataFrame(columns=col) date = input(&#39;날짜를 입력하세요 : &#39;) res = requests.get(f&#39;https://www.hsmoa.com/?date={date}&amp;site=&amp;cate=&#39;) res.status_code soup = BeautifulSoup(res.content, &quot;html.parser&quot;) item_list = [] category_list = [] shopmall_list = [] time_list = [] price_list = [] container = soup.select(&#39;div.timeline-item&#39;) for idx, item in tqdm(enumerate(container)): # 상품 item_content = item.select_one(&#39;.font-15&#39;).text.strip() item_list.append(item_content) # 문자화 make_str = str(item) make_str = make_str.split(&#39;&gt;&#39;)[0] # 쇼핑사 shopmall_content = make_str.split(&#39;timeline-item &#39;)[1].split(&quot; &quot;)[0] shopmall_list.append(shopmall_content) # 카테고리 분류 p = re.compile(&#39;[가-힣]&#39;) result = p.findall(make_str) category_content = &quot;&quot;.join(result) category_list.append(category_content) # 시간0 try : time_contents = item.select_one(&#39;.font-12&#39;).text.strip() time_start = time_contents.split(&quot; n&quot;)[0] time_end = time_contents.split(&quot; n&quot;)[1].strip() time_content = time_start + time_end time_list.append(time_content) except: time_content = &quot;-&quot; # 가격 price_contents = item.select_one(&#39;.strong.font-17&#39;).text.strip() # 이미지 str_img = str(item.select_one(&#39;img.lazy&#39;)) img_content = str_img.split(&#39;smart/&#39;)[1].split(&#39;&quot;&#39;)[0] # 딕셔너리 dict_info = {&#39;날짜&#39;:date, &#39;카테고리&#39;: category_content,&#39;홈사&#39;:shopmall_content, &#39;시간&#39;:time_content,&#39;타이틀&#39;:item_content,&#39;제품가&#39;:price_contents,&#39;이미지&#39;:img_content} df = df.append(dict_info, ignore_index=True) # 엑셀 내보내기 df.to_excel(&quot;쇼핑몰데이터.xlsx&quot;) df . 날짜를 입력하세요 : 20220626 . 429it [00:02, 148.21it/s] . 날짜 카테고리 홈사 시간 타이틀 제품가 이미지 . 0 20220626 | 가전디지털 | nsmallplus | 0시 03분 ~0시 43분 | 휴라이즈 턴테이블 프리미엄형(HR-TS200) | 274,000원 | http://cdn.image.buzzni.com/2022/06/17/dXFH3Ku... | . 1 20220626 | 패션잡화 | wshop | 0시 25분 ~1시 26분 | [릴리전]베이직 코튼 100 티셔츠 9종세트(남여공용) | 28,900원 | http://cdn.image.buzzni.com/2022/06/23/VaLU0nX... | . 2 20220626 | 식품건강 | ssgshop | 0시 27분 ~1시 27분 | [이번달 단 하루 1개월분 더] 종근당건강 프로메가 알티지오메가3 듀얼 12+1개월... | 168,600원 | http://cdn.image.buzzni.com/2022/04/20/o47SfAq... | . 3 20220626 | 패션잡화 | kshopplus | 0시 35분 ~1시 36분 | 엘르 플라워 펀칭 샌들(여) | 54,510원 | http://cdn.image.buzzni.com/2022/06/14/pmpdXn3... | . 4 20220626 | 여행레저 | bshop | 0시 36분 ~1시 36분 | [바른투어] (상담예약만)울릉도/독도/관음도 3일 여행(7~9월) | 상담/렌탈 | http://cdn.image.buzzni.com/2022/06/10/FOVZNEy... | . ... ... | ... | ... | ... | ... | ... | ... | . 424 20220626 | 생활주방 | hmall | 23시 50분 ~1시 00분 | 라클라우드 이태리 천연라텍스 매트리스 렌탈 | 상담/렌탈 | http://cdn.image.buzzni.com/2022/05/17/FhAnDp2... | . 425 20220626 | 가전디지털 | hnsmall | 23시 50분 ~1시 00분 | [방송][TV CF동일] 유라이크 사파이어 쿨링 셀프제모기 (의료기기 UI-04M) | 358,200원 | http://cdn.image.buzzni.com/2022/06/27/kr1eRYC... | . 426 20220626 | 생활주방 | lottemall | 23시 50분 ~1시 00분 | 바디프랜드 안마의자 렌탈 | 상담/렌탈 | http://cdn.image.buzzni.com/2022/05/10/PF6mJJh... | . 427 20220626 | 식품건강 | nsmall | 23시 50분 ~1시 00분 | 빨간스캔들 유기농석류 240포 | 134,500원 | http://cdn.image.buzzni.com/2022/06/22/SeqDKbJ... | . 428 20220626 | 식품건강 | immall | 23시 55분 ~1시 00분 | [무료체험7팩] 제주콩생나또(1+1세트)_68팩 | 45,900원 | http://cdn.image.buzzni.com/2022/03/05/gX4vp3r... | . 429 rows × 7 columns . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt;",
            "url": "https://tg0708.github.io/testcolabblog/scrapping/jupyter/2022/07/03/_07_04_mall.html",
            "relUrl": "/scrapping/jupyter/2022/07/03/_07_04_mall.html",
            "date": " • Jul 3, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://tg0708.github.io/testcolabblog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://tg0708.github.io/testcolabblog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://tg0708.github.io/testcolabblog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://tg0708.github.io/testcolabblog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}